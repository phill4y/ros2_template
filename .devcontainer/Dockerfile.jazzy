FROM ghcr.io/sloretz/ros:jazzy-desktop-full

# Set user provided by base image as env var
ENV USER=ubuntu

# Setup environment
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LANGUAGE=${LANG}
ENV LC_ALL=${LANG}

# Build relevant args and env vars
ENV CXX_STANDARD=23

# ROS distro related
ENV ROS_DISTRO=jazzy
ENV ROS_SETUP_SCRIPT=/opt/ros/${ROS_DISTRO}/setup.sh

# # Fix issues with ros2 keys
# RUN rm -f /usr/share/keyrings/ros-archive-keyring.gpg \
#     && find /etc/apt/ -type f -name "*.list" -exec sed -i '/packages.ros.org/d' {} + \
#     && apt-get update && apt-get install -y  --no-install-recommends \
#     curl \
#     gnupg2 \
#     lsb-release \
#     && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg \
#     && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt-get -y update && apt-get install -y --no-install-recommends \
    locales \
    && locale-gen ${LANG} \
    && rm -rf /var/lib/apt/lists/* && apt-get clean

# Install all remaining packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    # babeltrace \
    ccache \
    # clangd-18=1:18.1.3-1 \
    # clang-18=1:18.1.3-1 \
    # clang-format-18=1:18.1.3-1 \
    # clang-tidy-18=1:18.1.3-1  \
    # clang-tools-18=1:18.1.3-1  \
    clangd-18 \
    clang-18 \
    clang-format-18 \
    clang-tidy-18 \
    clang-tools-18 \
    # cppzmq-dev \
    # gnupg \
    file \
    gdb \
    git-lfs \
    # imagemagick \
    iproute2 \
    # libgoogle-glog-dev \
    # libgraphicsmagick++1-dev \
    # liblog4cxx-dev \
    # libnanoflann-dev \
    # libclang1-18=1:18.1.3-1 \
    # libclang-common-18-dev=1:18.1.3-1 \
    # libclang-cpp18=1:18.1.3-1 \
    # libllvm18=1:18.1.3-1 \
    libclang1-18 \
    libclang-common-18-dev \
    libclang-cpp18 \
    libllvm18 \
    libpcl-dev \
    # llvm-18-linker-tools=1:18.1.3-1 \
    llvm-18-linker-tools \
    # libxsimd-dev \
    nlohmann-json3-dev \
    ninja-build \
    # nodejs \
    # npm \
    python3-pip \
    python3.12-venv \
    shellcheck \
    tree \
    vim \
    zsh \
    ros-${ROS_DISTRO}-action-tutorials-cpp \
    ros-${ROS_DISTRO}-action-tutorials-interfaces \
    ros-${ROS_DISTRO}-behaviortree-cpp-v3 \
    ros-${ROS_DISTRO}-bondcpp \
    ros-${ROS_DISTRO}-cv-bridge \
    ros-${ROS_DISTRO}-diagnostic-updater \
    ros-${ROS_DISTRO}-diagnostic-aggregator \
    ros-${ROS_DISTRO}-gazebo-msgs \
    ros-${ROS_DISTRO}-gz-ros2-control \
    ros-${ROS_DISTRO}-joint-state-publisher \
    ros-${ROS_DISTRO}-joint-state-broadcaster \
    ros-${ROS_DISTRO}-joy \
    ros-${ROS_DISTRO}-plotjuggler \
    ros-${ROS_DISTRO}-plotjuggler-ros \
    ros-${ROS_DISTRO}-laser-filters \
    ros-${ROS_DISTRO}-navigation2 \
    ros-${ROS_DISTRO}-nav2-bringup \
    ros-${ROS_DISTRO}-pcl-conversions \
    ros-${ROS_DISTRO}-realtime-tools \
    ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
    ros-${ROS_DISTRO}-ros2trace \
    ros-${ROS_DISTRO}-ros2-controllers \
    ros-${ROS_DISTRO}-ros-gz \
    ros-${ROS_DISTRO}-rqt-tf-tree \
    ros-${ROS_DISTRO}-ruckig \
    ros-${ROS_DISTRO}-slam-toolbox \
    ros-${ROS_DISTRO}-teleop-twist-joy \
    ros-${ROS_DISTRO}-teleop-twist-keyboard \
    ros-${ROS_DISTRO}-test-msgs \
    ros-${ROS_DISTRO}-topic-tools \
    ros-${ROS_DISTRO}-tf2-msgs \
    ros-${ROS_DISTRO}-tf-transformations \
    ros-${ROS_DISTRO}-tracetools-launch \
    ros-${ROS_DISTRO}-twist-mux \
    wget \
    # xtensor-dev \
    xterm \
    && rm -rf /var/lib/apt/lists/* && apt-get clean

# Install RR debugger
RUN wget "https://github.com/rr-debugger/rr/releases/download/5.8.0/rr-5.8.0-Linux-$(uname -m).deb" -P /tmp && dpkg -i /tmp/rr-5.8.0-Linux-$(uname -m).deb && \
    dpkg --configure -a \
    && rm -rf /tmp/*

# Install docker
RUN sh -c "$(wget -O- https://get.docker.com/)"

# Install pylyzer (For non-root user)
USER $USER
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y  && \
    . $HOME/.cargo/env && \
    cargo install pylyzer
USER root

# Install python requirements
RUN --mount=type=bind,source=.devcontainer/requirements.txt,target=/tmp/requirements.txt \
    python3 -m pip install --no-cache-dir --break-system-packages -r /tmp/requirements.txt

# Install ruff
RUN curl --proto '=https' --tlsv1.2 -LsSf https://github.com/astral-sh/ruff/releases/download/0.12.0/ruff-installer.sh | sh && \
    mv /root/.local/bin/ruff /usr/bin/ruff && \
    rm -rf /root/.local /root/.config/ruff /root/.config/fish

# # Fix path issues with ROS2 jazzy
# RUN find /opt/ros/jazzy/include -name "*.h" -exec sed -i 's|#include "type_description_interfaces/\(.*\)"|#include "/opt/ros/jazzy/include/type_description_interfaces/type_description_interfaces/\1"|g' {} +
